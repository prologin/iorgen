---

include:
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - container build
  - build
  - test
  - qa
  - security
  - deploy

secret_detection:
  stage: security
  interruptible: true
  needs: []

container build:
  stage: container build
  needs: []
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --opt build-arg:PYTHON_IMAGE=$PYTHON_IMAGE \
          --opt build-arg:PYTHON_VERSION=$PYTHON_VERSION \
          --output type=image,\"name=$CI_REGISTRY_IMAGE/$PYTHON_IMAGE-$PYTHON_VERSION/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-$PYTHON_IMAGE-$PYTHON_VERSION \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-$PYTHON_IMAGE-$PYTHON_VERSION,mode=max
  parallel:
    matrix:
      - PYTHON_IMAGE: python
        PYTHON_VERSION:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
      - PYTHON_IMAGE: pypy
        PYTHON_VERSION:
          - "3.9"
          - "3.10"

container build ci:
  stage: container build
  needs: []
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --opt build-arg:INCLUDE_DEV_DEPS=true \
          --output type=image,\"name=$CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-ci \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-ci,mode=max

build:
  stage: build
  needs:
    - container build ci
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  artifacts:
    paths:
      - dist/*
  script:
    - poetry build -n -v

compile:
  stage: test
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  needs:
    - container build ci
    - build
  dependencies:
    - build
  before_script:
    - pip3 install dist/iorgen-*.whl
  script:
    - ./test/test.py --no_missing
    - env LC_ALL=fr_FR.UTF8 ./test/test.py --no_missing

test:
  stage: test
  image: $CI_REGISTRY_IMAGE/$PYTHON_IMAGE-$PYTHON_VERSION/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  needs:
    - container build
    - build
  dependencies:
    - build
  before_script:
    - pip3 install dist/iorgen-*.whl
  script:
    - ./test/test.py --no_compilation
  parallel:
    matrix:
      - PYTHON_IMAGE: python
        PYTHON_VERSION:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
      - PYTHON_IMAGE: pypy
        PYTHON_VERSION:
          - "3.9"
          - "3.10"

lint:
  stage: qa
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  needs:
    - container build ci
    - build
  dependencies:
    - build
  before_script:
    - pip3 install dist/iorgen-*.whl
  script:
    - pre-commit run --all-files
  variables:
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.pre-commit-cache
  cache:
    key: $CI_JOB_NAME
    paths:
      - .pre-commit-cache
    when: always

deploy:
  stage: deploy
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    POETRY_HTTP_BASIC_GITLAB_USERNAME: "${PACKAGE_REGISTRY_USERNAME}"
    POETRY_HTTP_BASIC_GITLAB_PASSWORD: "${PACKAGE_REGISTRY_PASSWORD}"
  before_script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  script:
    - poetry publish --verbose --no-interaction -r gitlab

deploy container:
  stage: deploy
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --output type=image,\"name=$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG:-latest}\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-python-3.10 \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-python-3.10,mode=max
